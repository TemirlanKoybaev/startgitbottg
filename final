import telebot
from telebot import types

bot = telebot.TeleBot('7675435772:AAEyZchpvacB6sL1p1dvLZZrIcE8FBQr6DU')

user_current_question = {}


@bot.message_handler(commands=['start'])
def start(message):
      bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Å–≤–æ–∏—Ç—å Git.')

      markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
      yes_button = types.KeyboardButton('‚úÖ –î–∞')
      no_button = types.KeyboardButton('‚ùå –ù–µ—Ç')

      check_knowledge_button = types.KeyboardButton('üéì –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ Git')
      flashcards_button = types.KeyboardButton('üìù –£—á–µ–±–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ Git')
      markup.add(yes_button, no_button, check_knowledge_button, flashcards_button)

      bot.send_message(message.chat.id, '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É —Ç–µ–±—è Git?', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ['‚úÖ –î–∞', '‚ùå –ù–µ—Ç'])
def handle_git_response(message):
      if message.text == '‚úÖ –î–∞':
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            vs_code_button = types.KeyboardButton('üñ• Visual Studio/VS Code')
            terminal_button = types.KeyboardButton('üíª –¢–µ—Ä–º–∏–Ω–∞–ª')
            main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é', request_contact=False)
            markup.add(vs_code_button, terminal_button)
            markup.add(main_menu_button)

            bot.send_message(message.chat.id, '–ö–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å Git?', reply_markup=markup)

      elif message.text == '‚ùå –ù–µ—Ç':
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            windows_button = types.KeyboardButton('üñ• Windows')
            macos_button = types.KeyboardButton('üçè MacOS')
            linux_button = types.KeyboardButton('üêß Linux')
            main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é', request_contact=False)
            markup.add(windows_button, macos_button, linux_button)
            markup.add(main_menu_button)

            bot.send_message(message.chat.id, '–ö–∞–∫—É—é –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å?', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ['üñ• Windows', 'üçè MacOS', 'üêß Linux'])
def handle_os_response(message):
      if message.text == 'üñ• Windows':
            bot.send_message(message.chat.id, """<b>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git –Ω–∞ Windows</b>

<b>–®–∞–≥ 1:</b> –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç Git (https://git-scm.com/downloads/win) –≤–æ –≤–∫–ª–∞–¥–∫—É "Downloads for Windows".

<b>–®–∞–≥ 2:</b> –í—ã–±–µ—Ä–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª:
‚Ä¢ 32-bit Git for Windows Setup
‚Ä¢ 64-bit Git for Windows Setup

–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–∞–∑—Ä—è–¥–Ω–æ—Å—Ç—å —Ç–≤–æ–µ–π –û–°, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π: https://support.microsoft.com/ru-ru/office/–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ-–Ω–∞–ª–∏—á–∏—è-32-–∏–ª–∏-64-—Ä–∞–∑—Ä—è–¥–Ω–æ–π-–≤–µ—Ä—Å–∏–∏-–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π-—Å–∏—Å—Ç–µ–º—ã-windows-–Ω–∞-–∫–æ–º–ø—å—é—Ç–µ—Ä–µ-aac162a1-0cb3-46f2-888f-2f22897396ce

<b>–®–∞–≥ 3:</b> –ó–∞–ø—É—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª.

<b>–®–∞–≥ 4:</b> –ü–æ—Å—Ç–∞–≤—å –≥–∞–ª–æ—á–∫—É –Ω–∞–ø—Ä–æ—Ç–∏–≤ "Only show new options", —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–ª–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è —Ç–≤–æ–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é, —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: https://timeweb.cloud/tutorials/git/ustanovka-git-na-windows.

<b>–®–∞–≥ 5:</b> –ù–∞–∂–º–∏ "Install" –∏ –¥–æ–∂–¥–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏.""", parse_mode='HTML')

      elif message.text == 'üçè MacOS':
            bot.send_message(message.chat.id, """<b>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git –Ω–∞ MacOS</b>

1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git —á–µ—Ä–µ–∑ Homebrew:
   ‚Ä¢ –û—Ç–∫—Ä–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É: <code>brew install git</code>

2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Xcode Command Line Tools:
   ‚Ä¢ –û—Ç–∫—Ä–æ–π —Ç–µ—Ä–º–∏–Ω–∞–ª –∏ –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É: <code>git --version</code>
   –ï—Å–ª–∏ Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ç–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Xcode Command Line Tools.

3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç Git:
   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ https://git-scm.com/download/mac –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.

<b>–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:</b>
–ù–∞—Å—Ç—Ä–æ–π Git, —É–∫–∞–∑–∞–≤ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ email:
<code>git config --global user.name "–í–∞—à–µ –ò–º—è"</code>
<code>git config --global user.email "–≤–∞—à.email@example.com"</code>""", parse_mode='HTML')

      elif message.text == 'üêß Linux':
            bot.send_message(message.chat.id, """<b>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git –Ω–∞ Linux</b>

–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git –Ω–∞ Linux –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–π –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏–∏:

1. –î–ª—è Ubuntu / Debian:
   ```
   sudo apt update
   sudo apt install git
   ```

2. –î–ª—è Fedora:
   ```
   sudo dnf install git
   ```

3. –î–ª—è Arch Linux:
   ```
   sudo pacman -S git
   ```

<b>–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:</b>
–ù–∞—Å—Ç—Ä–æ–π Git, —É–∫–∞–∑–∞–≤ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ email:
<code>git config --global user.name "–í–∞—à–µ –ò–º—è"</code>
<code>git config --global user.email "–≤–∞—à.email@example.com"</code>""", parse_mode='HTML')

      markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
      yes_button = types.KeyboardButton('‚úÖ –î–∞, Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
      no_button = types.KeyboardButton('‚ùå –ù–µ—Ç, –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã')
      main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é', request_contact=False)
      markup.add(yes_button, no_button)
      markup.add(main_menu_button)

      bot.send_message(message.chat.id, '–£—Å—Ç–∞–Ω–æ–≤–∏–ª –ª–∏ —Ç—ã Git —É—Å–ø–µ—à–Ω–æ?', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ['‚úÖ –î–∞, Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', '‚ùå –ù–µ—Ç, –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã'])
def handle_git_installation_confirmation(message):
      if message.text == '‚úÖ –î–∞, Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω':
            bot.send_message(message.chat.id, """–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º Git:

1. –£–∫–∞–∂–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
<code>git config --global user.name "–í–∞—à–µ –ò–º—è"</code>

2. –£–∫–∞–∂–∏ email:
<code>git config --global user.email "–≤–∞—à.email@example.com"</code>

–¢–µ–ø–µ—Ä—å Git –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!""", parse_mode='HTML')

            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å Git
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            vs_code_button = types.KeyboardButton('üñ• Visual Studio/VS Code')
            terminal_button = types.KeyboardButton('üíª –¢–µ—Ä–º–∏–Ω–∞–ª')
            main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é', request_contact=False)
            markup.add(vs_code_button, terminal_button)
            markup.add(main_menu_button)

            bot.send_message(message.chat.id, '–ö–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å Git?', reply_markup=markup)

      elif message.text == '‚ùå –ù–µ—Ç, –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã':
            bot.send_message(message.chat.id,
                             '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–ª–∏ –∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ñ–æ—Ä—É–º–µ: https://stackoverflow.com/questions/tagged/git')


@bot.message_handler(func=lambda message: message.text in ['üñ• Visual Studio/VS Code', 'üíª –¢–µ—Ä–º–∏–Ω–∞–ª'])
def handle_working_method(message):
      if message.text == 'üñ• Visual Studio/VS Code':
            bot.send_message(message.chat.id,
                             '–•–æ—Ä–æ—à–∏–π –≤—ã–±–æ—Ä! –í–æ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Git –≤ Visual Studio –∏–ª–∏ VS Code: https://code.visualstudio.com/docs/editor/versioncontrol')
      elif message.text == 'üíª –¢–µ—Ä–º–∏–Ω–∞–ª':
            bot.send_message(message.chat.id, """<b>–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Git –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:</b>

<b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:</b>
<code>git init –∏–º—è_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è</code>

<b>–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:</b>
<code>git clone URL_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è</code>

<b>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:</b>
<code>git status</code>

<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∏–Ω–¥–µ–∫—Å:</b>
<code>git add –∏–º—è_—Ñ–∞–π–ª–∞</code>

<b>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π:</b>
<code>git add .</code>

<b>–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:</b>
<code>git commit -m "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞"</code>

<b>–ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–º–∏—Ç–æ–≤:</b>
<code>git log</code>

<b>–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:</b>
<code>git push origin –≤–µ—Ç–∫–∞</code>

<b>–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–∑ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:</b>
<code>git pull origin –≤–µ—Ç–∫–∞</code>

<b>–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏:</b>
<code>git branch –∏–º—è_–≤–µ—Ç–∫–∏</code>

<b>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥—É—é –≤–µ—Ç–∫—É:</b>
<code>git checkout –∏–º—è_–≤–µ—Ç–∫–∏</code>

<b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>git help</code> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ª—é–±–æ–π –∫–æ–º–∞–Ω–¥–µ.
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –¥–µ–ª–∞–π—Ç–µ –∫–æ–º–º–∏—Ç—ã –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–π—Ç–µ—Å—å —Å —É–¥–∞–ª—ë–Ω–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ—Ç–µ—Ä–∏ –¥–∞–Ω–Ω—ã—Ö.""",
                             parse_mode='HTML')


@bot.message_handler(func=lambda message: message.text == 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é')
def return_to_main_menu(message):
      start(message)


@bot.message_handler(func=lambda message: message.text == 'üéì –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ Git')
def start_quiz(message):
      markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
      question_1_button = types.KeyboardButton('‚ùì –í–æ–ø—Ä–æ—Å 1')
      question_2_button = types.KeyboardButton('‚ùì –í–æ–ø—Ä–æ—Å 2')
      question_3_button = types.KeyboardButton('‚ùì –í–æ–ø—Ä–æ—Å 3')
      question_4_button = types.KeyboardButton('‚ùì –í–æ–ø—Ä–æ—Å 4')
      main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é')
      markup.add(question_1_button, question_2_button, question_3_button, question_4_button)
      markup.add(main_menu_button)
      bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π –ø–æ Git:', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == 'üìù –£—á–µ–±–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ Git')
def start_flashcards(message):
      flashcards = [
            {"question": "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–º–∞–Ω–¥–∞ git init?", "answer": "–û–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Git."},
            {"question": "–ö–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å?", "answer": "git add <–∏–º—è_—Ñ–∞–π–ª–∞>"},
            {"question": "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–º–∏—Ç?", "answer": "git commit -m \"–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞\""},
            {"question": "–ö–∞–∫ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π?", "answer": "git clone <URL_—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è>"}
      ]
      for flashcard in flashcards:
            bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å: {flashcard['question']}\n–û—Ç–≤–µ—Ç: {flashcard['answer']}")
      main_menu_button = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
      main_menu_button.add(types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é'))
      bot.send_message(message.chat.id,
                       "–≠—Ç–æ –±—ã–ª–∏ —É—á–µ–±–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ Git. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
                       reply_markup=main_menu_button)


@bot.message_handler(func=lambda message: message.text in ['‚ùì –í–æ–ø—Ä–æ—Å 1', '‚ùì –í–æ–ø—Ä–æ—Å 2', '‚ùì –í–æ–ø—Ä–æ—Å 3', '‚ùì –í–æ–ø—Ä–æ—Å 4'])
def handle_quiz_question(message):
      if message.text == '‚ùì –í–æ–ø—Ä–æ—Å 1':
            user_current_question[message.chat.id] = '–í–æ–ø—Ä–æ—Å 1'
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            option_1 = types.KeyboardButton('1) git start')
            option_2 = types.KeyboardButton('2) git init')
            option_3 = types.KeyboardButton('3) git create')
            main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é')
            markup.add(option_1, option_2, option_3)
            markup.add(main_menu_button)
            bot.send_message(message.chat.id,
                             "–í–æ–ø—Ä–æ—Å 1: –ö–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ Git?",
                             reply_markup=markup)
      elif message.text == '‚ùì –í–æ–ø—Ä–æ—Å 2':
            user_current_question[message.chat.id] = '–í–æ–ø—Ä–æ—Å 2'
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            option_1 = types.KeyboardButton('1) git add')
            option_2 = types.KeyboardButton('2) git push')
            option_3 = types.KeyboardButton('3) git commit')
            main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é')
            markup.add(option_1, option_2, option_3)
            markup.add(main_menu_button)
            bot.send_message(message.chat.id, "–í–æ–ø—Ä–æ—Å 2: –ö–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –∏–Ω–¥–µ–∫—Å?",
                             reply_markup=markup)
      elif message.text == '‚ùì –í–æ–ø—Ä–æ—Å 3':
            user_current_question[message.chat.id] = '–í–æ–ø—Ä–æ—Å 3'
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            option_1 = types.KeyboardButton('1) git history')
            option_2 = types.KeyboardButton('2) git log')
            option_3 = types.KeyboardButton('3) git show')
            main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é')
            markup.add(option_1, option_2, option_3)
            markup.add(main_menu_button)
            bot.send_message(message.chat.id, "–í–æ–ø—Ä–æ—Å 3: –ö–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∫–æ–º–º–∏—Ç–æ–≤?",
                             reply_markup=markup)
      elif message.text == '‚ùì –í–æ–ø—Ä–æ—Å 4':
            user_current_question[message.chat.id] = '–í–æ–ø—Ä–æ—Å 4'
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            option_1 = types.KeyboardButton('1) git branch')
            option_2 = types.KeyboardButton('2) git new')
            option_3 = types.KeyboardButton('3) git create-branch')
            main_menu_button = types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é')
            markup.add(option_1, option_2, option_3)
            markup.add(main_menu_button)
            bot.send_message(message.chat.id, "–í–æ–ø—Ä–æ—Å 4: –ö–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏?",
                             reply_markup=markup)


@bot.message_handler(
      func=lambda message: message.text.startswith('1)') or message.text.startswith('2)') or message.text.startswith(
            '3)'))
def handle_quiz_answer(message):
      correct_answers = {
            '–í–æ–ø—Ä–æ—Å 1': '2) git init',
            '–í–æ–ø—Ä–æ—Å 2': '1) git add',
            '–í–æ–ø—Ä–æ—Å 3': '2) git log',
            '–í–æ–ø—Ä–æ—Å 4': '1) git branch'
      }
      current_question = user_current_question.get(message.chat.id, '')
      correct_answer = correct_answers.get(current_question, '')
      if message.text == correct_answer:
            bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ')
      else:
            bot.send_message(message.chat.id, f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}')

      main_menu_button = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
      main_menu_button.add(types.KeyboardButton('üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é'))
      bot.send_message(message.chat.id, '–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.',
                       reply_markup=main_menu_button)


bot.polling(none_stop=True)
